# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
let
  swapDevice = "/dev/disk/by-uuid/3433d9c0-ebca-4967-88d9-5669d188728c";
in
  {
    config,
    lib,
    modulesPath,
    ...
  }: {
    imports = [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

    boot.initrd.availableKernelModules = ["xhci_pci" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc"];
    boot.initrd.kernelModules = [];
    boot.kernelModules = ["kvm-intel"];
    boot.extraModulePackages = [];

    boot.initrd.luks.devices = {
      crypt-key = {
        device = "/dev/disk/by-uuid/5a87fc40-0e29-4575-b229-9c6186bea0d1";
        preLVM = true;
      };

      crypt-swap = {
        device = "/dev/disk/by-uuid/76e7e000-376d-4710-a05f-5e1e0df787b2";
        keyFile = "/dev/mapper/crypt-key";
        preLVM = true;
      };

      crypt-root = {
        device = "/dev/disk/by-uuid/07e0d6c0-3452-4151-878b-55fa71078654";
        keyFile = "/dev/mapper/crypt-key";
        preLVM = true;
      };
    };

    fileSystems."/" = {
      device = "rpool/local/root";
      fsType = "zfs";
    };

    fileSystems."/boot" = {
      device = "/dev/disk/by-uuid/8844-033D";
      fsType = "vfat";
    };

    fileSystems."/nix" = {
      device = "rpool/local/nix";
      fsType = "zfs";
    };

    fileSystems."/home" = {
      device = "rpool/safe/home";
      fsType = "zfs";
    };

    fileSystems."/persist" = {
      device = "rpool/safe/persist";
      fsType = "zfs";
    };

    swapDevices = [
      {
        device = swapDevice;
      }
    ];
    boot.resumeDevice = swapDevice;

    # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
    # (the default) this is the recommended approach. When using systemd-networkd it's
    # still possible to use this option, but it's recommended to use it in conjunction
    # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
    networking.useDHCP = lib.mkDefault true;
    # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

    nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
    powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
    hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  }
